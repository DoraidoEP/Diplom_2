{"name": "Проверка того, что нельзя создать двух пользователей с одинаковым логином", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 403\n +  where 200 = <Response [200]>.status_code", "trace": "self = <tests.test_create_user.TestCreateUser object at 0x000001F872987AD0>\n\n    @allure.title('Проверка того, что нельзя создать двух пользователей с одинаковым логином')\n    @allure.description('Отправка двух запросов на создание пользователя с одинаковыми данными')\n    def test_create_user_double_login_not_created(self):\n        # Генерируем пароль и имя пользователя для регистрации. Используем существующий email\n        user_data = {\n            'email': Data.email,\n            'password': generate_user_pass(),\n            'name': generate_user_name()\n        }\n        # Отправляем POST-запрос на указанный URL с данными о email, пароле и имени пользователя\n        response = requests.post(DataUrl.Url_create_user, data=user_data)\n        # Проверяем, что статус ответа равен 403\n>       assert response.status_code == 403\nE       assert 200 == 403\nE        +  where 200 = <Response [200]>.status_code\n\ntests\\test_create_user.py:34: AssertionError"}, "description": "Отправка двух запросов на создание пользователя с одинаковыми данными", "start": 1722448427728, "stop": 1722448428059, "uuid": "c05c95e9-8590-4217-825c-6617b278f1c8", "historyId": "8e89a2db5a5371d708ae752d6fb05a53", "testCaseId": "8e89a2db5a5371d708ae752d6fb05a53", "fullName": "tests.test_create_user.TestCreateUser#test_create_user_double_login_not_created", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_user"}, {"name": "subSuite", "value": "TestCreateUser"}, {"name": "host", "value": "DESKTOP-MUFNET6"}, {"name": "thread", "value": "70688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_user"}]}