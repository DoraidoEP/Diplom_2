{"name": "Проверка создания заказа с авторизованным пользователем", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <tests.test_create_order.TestCreateOrder object at 0x000001F87292A690>\n\n    @allure.title('Проверка создания заказа с авторизованным пользователем')\n    @allure.description('Проверка создания заказа с существующими ингредиентами авторизованным пользователем')\n    def test_create_order_ingredients_authorized_user(self):\n        # Генерируем данные для регистрации пользователя\n        user_data = {\n                'email': generate_email_user(),\n                'password': generate_user_pass(),\n                'name': generate_user_name()\n        }\n        # Отправляем POST и GET запросы на указанный URL с данными о email, пароле и имени пользователя\n        requests.post(DataUrl.Url_login_user, data=user_data)\n        requests.get(DataUrl.Url_login_user, data=user_data)\n        # Отправляем POST-запрос на указанный URL с данными об ингредиентах\n        response = requests.post(DataUrl.Url_create_order, data=Ingredients.burger_existing)\n        # Проверяем, что статус ответа равен 200\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests\\test_create_order.py:23: AssertionError"}, "description": "Проверка создания заказа с существующими ингредиентами авторизованным пользователем", "start": 1722448425111, "stop": 1722448425863, "uuid": "d87eb8b5-652e-40f8-9905-5141c2965a53", "historyId": "8f1c061fd019841bc02478e51d5d40e0", "testCaseId": "8f1c061fd019841bc02478e51d5d40e0", "fullName": "tests.test_create_order.TestCreateOrder#test_create_order_ingredients_authorized_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "DESKTOP-MUFNET6"}, {"name": "thread", "value": "70688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}